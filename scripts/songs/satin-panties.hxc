import flixel.FlxG;
import flixel.FlxSprite;
import flixel.math.FlxBasePoint;
import flixel.tweens.FlxEase;
import flixel.tweens.FlxTween;
import flixel.util.FlxTimer;
import funkin.audio.FunkinSound;
import funkin.Conductor;
import funkin.graphics.adobeanimate.FlxAtlasSprite;
import funkin.graphics.FunkinSprite;
import funkin.modding.base.ScriptedFlxAtlasSprite;
import funkin.play.cutscene.CutsceneType;
import funkin.play.cutscene.VideoCutscene;
import funkin.play.GameOverSubState;
import funkin.play.PlayState;
import funkin.play.PlayStatePlaylist;
import funkin.play.song.Song;
import funkin.play.stage.StageProp;
import funkin.save.Save;

import funkin.play.character.CharacterType;
import funkin.play.character.CharacterDataParser;

class SatinPantiesSong extends Song {
	var hasPlayedCutscene:Bool;

	public function new() {
		super('satin-panties');

		hasPlayedCutscene = false;
	}

	public override function onDestroy(event:ScriptEvent) {
		hasPlayedCutscene = false;
	}

	public override function onCountdownStart(event:CountdownScriptEvent):Void {
		super.onCountdownStart(event);

		if (!hasPlayedCutscene) {
			hasPlayedCutscene = true;

			switch (PlayState.instance.currentVariation) {
				case 'default', 'erect':
					PlayState.instance.camHUD.visible = false;
					event.cancel(); // CANCEL THE COUNTDOWN!
					startBFCutscene();
			}
		} else {
			PlayState.instance.isInCutscene = false;
			PlayState.instance.disableKeys = false;
		}
	}

	function startBFCutscene() {
		PlayState.instance.isInCutscene = true;
		PlayState.instance.disableKeys = true;
		var currentStage = PlayState.instance.currentStage;

		if (currentStage.getBoyfriend() == null) {
			trace('No BF to focus on. Cutscene won\'t work properly. Skipping...');
			PlayState.instance.startCountdown();
			return;
		}

		if (currentStage.getDad() == null) {
			trace('No dad to focus on. Cutscene won\'t work properly. Skipping...');
			PlayState.instance.startCountdown();
			return;
		}
		if (currentStage.getGirlfriend() == null) {
			trace('No GF to focus on. Cutscene won\'t work properly. Skipping...');
			PlayState.instance.startCountdown();
			return;
		}

		currentStage.getDad().destroy();
		var character = CharacterDataParser.fetchCharacter('mom-car-cutscene');
		currentStage.addCharacter(character, CharacterType.DAD);
		currentStage.refresh();
		currentStage.getDad().playAnimation('idle');
		
		currentStage.getBoyfriend().destroy();
		var character = CharacterDataParser.fetchCharacter('bf-car-cutscene');
		currentStage.addCharacter(character, CharacterType.BF);
		currentStage.refresh();
		currentStage.getBoyfriend().playAnimation('idle');

		currentStage.getGirlfriend().playAnimation('idle-hold');
		currentStage.getBoyfriend().playAnimation('idle');
		currentStage.getDad().playAnimation('idle');

		FlxTween.tween(PlayState.instance.camHUD, {alpha: 0}, 1);
		new FlxTimer().start(1, function(tmr) {
			trace('Focusing camera on player.');
			var bfPoint = currentStage.getBoyfriend().cameraFocusPoint;
			PlayState.instance.tweenCameraToPosition(bfPoint.x, bfPoint.y, 2, FlxEase.quadInOut);
			PlayState.instance.tweenCameraZoom(currentStage.camZoom * 1.25, 2, true, FlxEase.quadInOut);
		});
		new FlxTimer().start(3, function(tmr) {
			FunkinSound.playOnce(Paths.sound('week1/hey'), 1);
			
			currentStage.getBoyfriend().playAnimation('hey');
		});

		var dadPoint = currentStage.getDad().cameraFocusPoint;
		new FlxTimer().start(4, function(tmr) {
			trace('Focusing camera on opponent.');
			currentStage.getDad().playAnimation('frown');

			PlayState.instance.tweenCameraToPosition(dadPoint.x - 160, dadPoint.y - 160, 2, FlxEase.quadInOut);
			PlayState.instance.tweenCameraZoom(currentStage.camZoom * 1.5, 2, true, FlxEase.quadInOut);
		});
		new FlxTimer().start(8, function(tmr) {
			trace('Begin countdown');
			currentStage.getDad().playAnimation('unfrown');
			PlayState.instance.tweenCameraZoom(currentStage.camZoom, 2, true, FlxEase.quadInOut);
			PlayState.instance.tweenCameraToPosition(dadPoint.x, dadPoint.y, 2, FlxEase.quadInOut);
			PlayState.instance.startCountdown();
			FlxTween.tween(PlayState.instance.camHUD, {alpha: 1}, 1);

			new FlxTimer().start(1, function(tmr) {				
				PlayState.instance.currentStage.getDad().destroy();
				var character = CharacterDataParser.fetchCharacter('mom-car');
				PlayState.instance.currentStage.addCharacter(character, CharacterType.DAD);
				PlayState.instance.currentStage.refresh();
			});				
			PlayState.instance.currentStage.getBoyfriend().destroy();
			var character = CharacterDataParser.fetchCharacter('bf-car');
			PlayState.instance.currentStage.addCharacter(character, CharacterType.BF);
			PlayState.instance.currentStage.refresh();
		});
	}
}
